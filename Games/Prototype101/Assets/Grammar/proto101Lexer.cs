//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from proto101.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

#pragma warning disable 3021
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class proto101Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		PC=1, NUM=2, SKILL=3, MAP=4, SIZE=5, ENEMY=6, TYPE=7, INT=8, NEWLINE=9, 
		WS=10;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"PC", "NUM", "SKILL", "MAP", "SIZE", "ENEMY", "TYPE", "INT", "NEWLINE", 
		"WS"
	};


		public PrototypeCompiler Compiler = new PrototypeCompiler(); //this will be the compiler file in the Unity project


	public proto101Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public proto101Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'player'", null, null, "'map'", null, "'enemy'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "PC", "NUM", "SKILL", "MAP", "SIZE", "ENEMY", "TYPE", "INT", "NEWLINE", 
		"WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "proto101.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static proto101Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\f', 'o', '\b', '\x1', '\x4', '\x2', '\t', '\x2', '\x4', 
		'\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', '\x5', 
		'\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', '\t', 
		'\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', '\t', 
		'\v', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x2', 
		'\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x5', '\x4', 
		'\x35', '\n', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x5', '\x6', 'H', '\n', 
		'\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x5', '\b', 'Z', '\n', '\b', '\x3', '\t', '\x5', '\t', ']', '\n', '\t', 
		'\x3', '\t', '\x6', '\t', '`', '\n', '\t', '\r', '\t', '\xE', '\t', '\x61', 
		'\x3', '\n', '\x5', '\n', '\x65', '\n', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x6', '\v', 'j', '\n', '\v', '\r', '\v', '\xE', '\v', 'k', 
		'\x3', '\v', '\x3', '\v', '\x2', '\x2', '\f', '\x3', '\x3', '\x5', '\x4', 
		'\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', '\t', '\x11', 
		'\n', '\x13', '\v', '\x15', '\f', '\x3', '\x2', '\x3', '\x5', '\x2', '\v', 
		'\f', '\xF', '\xF', '\"', '\"', '\x2', 'w', '\x2', '\x3', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\xF', '\x3', '\x2', '\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x13', '\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x3', '\x17', '\x3', '\x2', '\x2', '\x2', '\x5', 
		'\x1E', '\x3', '\x2', '\x2', '\x2', '\a', '\x34', '\x3', '\x2', '\x2', 
		'\x2', '\t', '\x36', '\x3', '\x2', '\x2', '\x2', '\v', 'G', '\x3', '\x2', 
		'\x2', '\x2', '\r', 'I', '\x3', '\x2', '\x2', '\x2', '\xF', 'Y', '\x3', 
		'\x2', '\x2', '\x2', '\x11', '\\', '\x3', '\x2', '\x2', '\x2', '\x13', 
		'\x64', '\x3', '\x2', '\x2', '\x2', '\x15', 'i', '\x3', '\x2', '\x2', 
		'\x2', '\x17', '\x18', '\a', 'r', '\x2', '\x2', '\x18', '\x19', '\a', 
		'n', '\x2', '\x2', '\x19', '\x1A', '\a', '\x63', '\x2', '\x2', '\x1A', 
		'\x1B', '\a', '{', '\x2', '\x2', '\x1B', '\x1C', '\a', 'g', '\x2', '\x2', 
		'\x1C', '\x1D', '\a', 't', '\x2', '\x2', '\x1D', '\x4', '\x3', '\x2', 
		'\x2', '\x2', '\x1E', '\x1F', '\x5', '\x11', '\t', '\x2', '\x1F', '\x6', 
		'\x3', '\x2', '\x2', '\x2', ' ', '!', '\a', '\x64', '\x2', '\x2', '!', 
		'\"', '\a', '\x63', '\x2', '\x2', '\"', '#', '\a', 'u', '\x2', '\x2', 
		'#', '$', '\a', 'k', '\x2', '\x2', '$', '\x35', '\a', '\x65', '\x2', '\x2', 
		'%', '&', '\a', '\x64', '\x2', '\x2', '&', '\'', '\a', '\x63', '\x2', 
		'\x2', '\'', '(', '\a', 'n', '\x2', '\x2', '(', ')', '\a', '\x63', '\x2', 
		'\x2', ')', '*', '\a', 'p', '\x2', '\x2', '*', '+', '\a', '\x65', '\x2', 
		'\x2', '+', ',', '\a', 'g', '\x2', '\x2', ',', '\x35', '\a', '\x66', '\x2', 
		'\x2', '-', '.', '\a', 'u', '\x2', '\x2', '.', '/', '\a', 'm', '\x2', 
		'\x2', '/', '\x30', '\a', 'k', '\x2', '\x2', '\x30', '\x31', '\a', 'n', 
		'\x2', '\x2', '\x31', '\x32', '\a', 'n', '\x2', '\x2', '\x32', '\x33', 
		'\a', 'g', '\x2', '\x2', '\x33', '\x35', '\a', '\x66', '\x2', '\x2', '\x34', 
		' ', '\x3', '\x2', '\x2', '\x2', '\x34', '%', '\x3', '\x2', '\x2', '\x2', 
		'\x34', '-', '\x3', '\x2', '\x2', '\x2', '\x35', '\b', '\x3', '\x2', '\x2', 
		'\x2', '\x36', '\x37', '\a', 'o', '\x2', '\x2', '\x37', '\x38', '\a', 
		'\x63', '\x2', '\x2', '\x38', '\x39', '\a', 'r', '\x2', '\x2', '\x39', 
		'\n', '\x3', '\x2', '\x2', '\x2', ':', ';', '\a', 'u', '\x2', '\x2', ';', 
		'<', '\a', 'o', '\x2', '\x2', '<', '=', '\a', '\x63', '\x2', '\x2', '=', 
		'>', '\a', 'n', '\x2', '\x2', '>', 'H', '\a', 'n', '\x2', '\x2', '?', 
		'@', '\a', 'o', '\x2', '\x2', '@', '\x41', '\a', 'g', '\x2', '\x2', '\x41', 
		'H', '\a', '\x66', '\x2', '\x2', '\x42', '\x43', '\a', 'n', '\x2', '\x2', 
		'\x43', '\x44', '\a', '\x63', '\x2', '\x2', '\x44', '\x45', '\a', 't', 
		'\x2', '\x2', '\x45', '\x46', '\a', 'i', '\x2', '\x2', '\x46', 'H', '\a', 
		'g', '\x2', '\x2', 'G', ':', '\x3', '\x2', '\x2', '\x2', 'G', '?', '\x3', 
		'\x2', '\x2', '\x2', 'G', '\x42', '\x3', '\x2', '\x2', '\x2', 'H', '\f', 
		'\x3', '\x2', '\x2', '\x2', 'I', 'J', '\a', 'g', '\x2', '\x2', 'J', 'K', 
		'\a', 'p', '\x2', '\x2', 'K', 'L', '\a', 'g', '\x2', '\x2', 'L', 'M', 
		'\a', 'o', '\x2', '\x2', 'M', 'N', '\a', '{', '\x2', '\x2', 'N', '\xE', 
		'\x3', '\x2', '\x2', '\x2', 'O', 'P', '\a', 'v', '\x2', '\x2', 'P', 'Q', 
		'\a', '{', '\x2', '\x2', 'Q', 'R', '\a', 'r', '\x2', '\x2', 'R', 'S', 
		'\a', 'g', '\x2', '\x2', 'S', 'Z', '\a', '\x43', '\x2', '\x2', 'T', 'U', 
		'\a', 'v', '\x2', '\x2', 'U', 'V', '\a', '{', '\x2', '\x2', 'V', 'W', 
		'\a', 'r', '\x2', '\x2', 'W', 'X', '\a', 'g', '\x2', '\x2', 'X', 'Z', 
		'\a', '\x44', '\x2', '\x2', 'Y', 'O', '\x3', '\x2', '\x2', '\x2', 'Y', 
		'T', '\x3', '\x2', '\x2', '\x2', 'Z', '\x10', '\x3', '\x2', '\x2', '\x2', 
		'[', ']', '\a', '/', '\x2', '\x2', '\\', '[', '\x3', '\x2', '\x2', '\x2', 
		'\\', ']', '\x3', '\x2', '\x2', '\x2', ']', '_', '\x3', '\x2', '\x2', 
		'\x2', '^', '`', '\x4', '\x32', ';', '\x2', '_', '^', '\x3', '\x2', '\x2', 
		'\x2', '`', '\x61', '\x3', '\x2', '\x2', '\x2', '\x61', '_', '\x3', '\x2', 
		'\x2', '\x2', '\x61', '\x62', '\x3', '\x2', '\x2', '\x2', '\x62', '\x12', 
		'\x3', '\x2', '\x2', '\x2', '\x63', '\x65', '\a', '\xF', '\x2', '\x2', 
		'\x64', '\x63', '\x3', '\x2', '\x2', '\x2', '\x64', '\x65', '\x3', '\x2', 
		'\x2', '\x2', '\x65', '\x66', '\x3', '\x2', '\x2', '\x2', '\x66', 'g', 
		'\a', '\f', '\x2', '\x2', 'g', '\x14', '\x3', '\x2', '\x2', '\x2', 'h', 
		'j', '\t', '\x2', '\x2', '\x2', 'i', 'h', '\x3', '\x2', '\x2', '\x2', 
		'j', 'k', '\x3', '\x2', '\x2', '\x2', 'k', 'i', '\x3', '\x2', '\x2', '\x2', 
		'k', 'l', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\x3', '\x2', '\x2', '\x2', 
		'm', 'n', '\b', '\v', '\x2', '\x2', 'n', '\x16', '\x3', '\x2', '\x2', 
		'\x2', '\n', '\x2', '\x34', 'G', 'Y', '\\', '\x61', '\x64', 'k', '\x3', 
		'\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
