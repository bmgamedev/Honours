//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from proto101.g4 by ANTLR 4.7.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

#pragma warning disable 3021
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.2")]
[System.CLSCompliant(false)]
public partial class proto101Lexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		GAMETYPE=1, PC=2, NUM=3, SKILL=4, DUNGEON=5, PLATFORMER=6, SIZE=7, ENEMY=8, 
		ENEMYTYPE=9, START=10, FLATPATH=11, LOWPLATFORM=12, HIGHPLATFORM=13, PATHGAP=14, 
		FINISHLINE=15, INT=16, NEWLINE=17, WS=18;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"GAMETYPE", "PC", "NUM", "SKILL", "DUNGEON", "PLATFORMER", "SIZE", "ENEMY", 
		"ENEMYTYPE", "START", "FLATPATH", "LOWPLATFORM", "HIGHPLATFORM", "PATHGAP", 
		"FINISHLINE", "INT", "NEWLINE", "WS"
	};


		public PrototypeCompiler Compiler = new PrototypeCompiler(); //this will be the compiler file in the Unity project


	public proto101Lexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public proto101Lexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'player'", null, null, "'dungeon'", "'platformer'", null, 
		"'enemy'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "GAMETYPE", "PC", "NUM", "SKILL", "DUNGEON", "PLATFORMER", "SIZE", 
		"ENEMY", "ENEMYTYPE", "START", "FLATPATH", "LOWPLATFORM", "HIGHPLATFORM", 
		"PATHGAP", "FINISHLINE", "INT", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "proto101.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static proto101Lexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x14', '\x9E', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x3', '\x2', '\x3', '\x2', '\x5', '\x2', '*', '\n', '\x2', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x5', '\x5', 'I', '\n', 
		'\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', 
		'\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\b', '\x3', '\b', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', 
		'\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', 
		'\x5', '\b', 'k', '\n', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', 
		'\n', '\x3', '\n', '\x5', '\n', '}', '\n', '\n', '\x3', '\v', '\x3', '\v', 
		'\x3', '\f', '\x3', '\f', '\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x11', '\x5', '\x11', '\x8C', '\n', '\x11', '\x3', '\x11', '\x6', '\x11', 
		'\x8F', '\n', '\x11', '\r', '\x11', '\xE', '\x11', '\x90', '\x3', '\x12', 
		'\x5', '\x12', '\x94', '\n', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', 
		'\x13', '\x6', '\x13', '\x99', '\n', '\x13', '\r', '\x13', '\xE', '\x13', 
		'\x9A', '\x3', '\x13', '\x3', '\x13', '\x2', '\x2', '\x14', '\x3', '\x3', 
		'\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', '\b', '\xF', 
		'\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', '\x19', 
		'\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', '#', 
		'\x13', '%', '\x14', '\x3', '\x2', '\t', '\x4', '\x2', 'U', 'U', 'u', 
		'u', '\x4', '\x2', 'H', 'H', 'h', 'h', '\x4', '\x2', 'R', 'R', 'r', 'r', 
		'\x4', '\x2', 'J', 'J', 'j', 'j', '\x4', '\x2', 'I', 'I', 'i', 'i', '\x4', 
		'\x2', 'G', 'G', 'g', 'g', '\x5', '\x2', '\v', '\f', '\xF', '\xF', '\"', 
		'\"', '\x2', '\xA7', '\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x5', '\x3', '\x2', '\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\t', '\x3', '\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\r', '\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x17', '\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '!', '\x3', '\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '%', '\x3', '\x2', '\x2', '\x2', '\x3', ')', '\x3', '\x2', 
		'\x2', '\x2', '\x5', '+', '\x3', '\x2', '\x2', '\x2', '\a', '\x32', '\x3', 
		'\x2', '\x2', '\x2', '\t', 'H', '\x3', '\x2', '\x2', '\x2', '\v', 'J', 
		'\x3', '\x2', '\x2', '\x2', '\r', 'R', '\x3', '\x2', '\x2', '\x2', '\xF', 
		'j', '\x3', '\x2', '\x2', '\x2', '\x11', 'l', '\x3', '\x2', '\x2', '\x2', 
		'\x13', '|', '\x3', '\x2', '\x2', '\x2', '\x15', '~', '\x3', '\x2', '\x2', 
		'\x2', '\x17', '\x80', '\x3', '\x2', '\x2', '\x2', '\x19', '\x82', '\x3', 
		'\x2', '\x2', '\x2', '\x1B', '\x84', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'\x86', '\x3', '\x2', '\x2', '\x2', '\x1F', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '!', '\x8B', '\x3', '\x2', '\x2', '\x2', '#', '\x93', '\x3', '\x2', 
		'\x2', '\x2', '%', '\x98', '\x3', '\x2', '\x2', '\x2', '\'', '*', '\x5', 
		'\v', '\x6', '\x2', '(', '*', '\x5', '\r', '\a', '\x2', ')', '\'', '\x3', 
		'\x2', '\x2', '\x2', ')', '(', '\x3', '\x2', '\x2', '\x2', '*', '\x4', 
		'\x3', '\x2', '\x2', '\x2', '+', ',', '\a', 'r', '\x2', '\x2', ',', '-', 
		'\a', 'n', '\x2', '\x2', '-', '.', '\a', '\x63', '\x2', '\x2', '.', '/', 
		'\a', '{', '\x2', '\x2', '/', '\x30', '\a', 'g', '\x2', '\x2', '\x30', 
		'\x31', '\a', 't', '\x2', '\x2', '\x31', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x32', '\x33', '\x5', '!', '\x11', '\x2', '\x33', '\b', '\x3', '\x2', 
		'\x2', '\x2', '\x34', '\x35', '\a', '\x64', '\x2', '\x2', '\x35', '\x36', 
		'\a', '\x63', '\x2', '\x2', '\x36', '\x37', '\a', 'u', '\x2', '\x2', '\x37', 
		'\x38', '\a', 'k', '\x2', '\x2', '\x38', 'I', '\a', '\x65', '\x2', '\x2', 
		'\x39', ':', '\a', '\x64', '\x2', '\x2', ':', ';', '\a', '\x63', '\x2', 
		'\x2', ';', '<', '\a', 'n', '\x2', '\x2', '<', '=', '\a', '\x63', '\x2', 
		'\x2', '=', '>', '\a', 'p', '\x2', '\x2', '>', '?', '\a', '\x65', '\x2', 
		'\x2', '?', '@', '\a', 'g', '\x2', '\x2', '@', 'I', '\a', '\x66', '\x2', 
		'\x2', '\x41', '\x42', '\a', 'u', '\x2', '\x2', '\x42', '\x43', '\a', 
		'm', '\x2', '\x2', '\x43', '\x44', '\a', 'k', '\x2', '\x2', '\x44', '\x45', 
		'\a', 'n', '\x2', '\x2', '\x45', '\x46', '\a', 'n', '\x2', '\x2', '\x46', 
		'G', '\a', 'g', '\x2', '\x2', 'G', 'I', '\a', '\x66', '\x2', '\x2', 'H', 
		'\x34', '\x3', '\x2', '\x2', '\x2', 'H', '\x39', '\x3', '\x2', '\x2', 
		'\x2', 'H', '\x41', '\x3', '\x2', '\x2', '\x2', 'I', '\n', '\x3', '\x2', 
		'\x2', '\x2', 'J', 'K', '\a', '\x66', '\x2', '\x2', 'K', 'L', '\a', 'w', 
		'\x2', '\x2', 'L', 'M', '\a', 'p', '\x2', '\x2', 'M', 'N', '\a', 'i', 
		'\x2', '\x2', 'N', 'O', '\a', 'g', '\x2', '\x2', 'O', 'P', '\a', 'q', 
		'\x2', '\x2', 'P', 'Q', '\a', 'p', '\x2', '\x2', 'Q', '\f', '\x3', '\x2', 
		'\x2', '\x2', 'R', 'S', '\a', 'r', '\x2', '\x2', 'S', 'T', '\a', 'n', 
		'\x2', '\x2', 'T', 'U', '\a', '\x63', '\x2', '\x2', 'U', 'V', '\a', 'v', 
		'\x2', '\x2', 'V', 'W', '\a', 'h', '\x2', '\x2', 'W', 'X', '\a', 'q', 
		'\x2', '\x2', 'X', 'Y', '\a', 't', '\x2', '\x2', 'Y', 'Z', '\a', 'o', 
		'\x2', '\x2', 'Z', '[', '\a', 'g', '\x2', '\x2', '[', '\\', '\a', 't', 
		'\x2', '\x2', '\\', '\xE', '\x3', '\x2', '\x2', '\x2', ']', '^', '\a', 
		'u', '\x2', '\x2', '^', '_', '\a', 'o', '\x2', '\x2', '_', '`', '\a', 
		'\x63', '\x2', '\x2', '`', '\x61', '\a', 'n', '\x2', '\x2', '\x61', 'k', 
		'\a', 'n', '\x2', '\x2', '\x62', '\x63', '\a', 'o', '\x2', '\x2', '\x63', 
		'\x64', '\a', 'g', '\x2', '\x2', '\x64', 'k', '\a', '\x66', '\x2', '\x2', 
		'\x65', '\x66', '\a', 'n', '\x2', '\x2', '\x66', 'g', '\a', '\x63', '\x2', 
		'\x2', 'g', 'h', '\a', 't', '\x2', '\x2', 'h', 'i', '\a', 'i', '\x2', 
		'\x2', 'i', 'k', '\a', 'g', '\x2', '\x2', 'j', ']', '\x3', '\x2', '\x2', 
		'\x2', 'j', '\x62', '\x3', '\x2', '\x2', '\x2', 'j', '\x65', '\x3', '\x2', 
		'\x2', '\x2', 'k', '\x10', '\x3', '\x2', '\x2', '\x2', 'l', 'm', '\a', 
		'g', '\x2', '\x2', 'm', 'n', '\a', 'p', '\x2', '\x2', 'n', 'o', '\a', 
		'g', '\x2', '\x2', 'o', 'p', '\a', 'o', '\x2', '\x2', 'p', 'q', '\a', 
		'{', '\x2', '\x2', 'q', '\x12', '\x3', '\x2', '\x2', '\x2', 'r', 's', 
		'\a', 'v', '\x2', '\x2', 's', 't', '\a', '{', '\x2', '\x2', 't', 'u', 
		'\a', 'r', '\x2', '\x2', 'u', 'v', '\a', 'g', '\x2', '\x2', 'v', '}', 
		'\a', '\x43', '\x2', '\x2', 'w', 'x', '\a', 'v', '\x2', '\x2', 'x', 'y', 
		'\a', '{', '\x2', '\x2', 'y', 'z', '\a', 'r', '\x2', '\x2', 'z', '{', 
		'\a', 'g', '\x2', '\x2', '{', '}', '\a', '\x44', '\x2', '\x2', '|', 'r', 
		'\x3', '\x2', '\x2', '\x2', '|', 'w', '\x3', '\x2', '\x2', '\x2', '}', 
		'\x14', '\x3', '\x2', '\x2', '\x2', '~', '\x7F', '\t', '\x2', '\x2', '\x2', 
		'\x7F', '\x16', '\x3', '\x2', '\x2', '\x2', '\x80', '\x81', '\t', '\x3', 
		'\x2', '\x2', '\x81', '\x18', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', 
		'\t', '\x4', '\x2', '\x2', '\x83', '\x1A', '\x3', '\x2', '\x2', '\x2', 
		'\x84', '\x85', '\t', '\x5', '\x2', '\x2', '\x85', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x86', '\x87', '\t', '\x6', '\x2', '\x2', '\x87', '\x1E', 
		'\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\t', '\a', '\x2', '\x2', 
		'\x89', ' ', '\x3', '\x2', '\x2', '\x2', '\x8A', '\x8C', '\a', '/', '\x2', 
		'\x2', '\x8B', '\x8A', '\x3', '\x2', '\x2', '\x2', '\x8B', '\x8C', '\x3', 
		'\x2', '\x2', '\x2', '\x8C', '\x8E', '\x3', '\x2', '\x2', '\x2', '\x8D', 
		'\x8F', '\x4', '\x32', ';', '\x2', '\x8E', '\x8D', '\x3', '\x2', '\x2', 
		'\x2', '\x8F', '\x90', '\x3', '\x2', '\x2', '\x2', '\x90', '\x8E', '\x3', 
		'\x2', '\x2', '\x2', '\x90', '\x91', '\x3', '\x2', '\x2', '\x2', '\x91', 
		'\"', '\x3', '\x2', '\x2', '\x2', '\x92', '\x94', '\a', '\xF', '\x2', 
		'\x2', '\x93', '\x92', '\x3', '\x2', '\x2', '\x2', '\x93', '\x94', '\x3', 
		'\x2', '\x2', '\x2', '\x94', '\x95', '\x3', '\x2', '\x2', '\x2', '\x95', 
		'\x96', '\a', '\f', '\x2', '\x2', '\x96', '$', '\x3', '\x2', '\x2', '\x2', 
		'\x97', '\x99', '\t', '\b', '\x2', '\x2', '\x98', '\x97', '\x3', '\x2', 
		'\x2', '\x2', '\x99', '\x9A', '\x3', '\x2', '\x2', '\x2', '\x9A', '\x98', 
		'\x3', '\x2', '\x2', '\x2', '\x9A', '\x9B', '\x3', '\x2', '\x2', '\x2', 
		'\x9B', '\x9C', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', '\b', '\x13', 
		'\x2', '\x2', '\x9D', '&', '\x3', '\x2', '\x2', '\x2', '\v', '\x2', ')', 
		'H', 'j', '|', '\x8B', '\x90', '\x93', '\x9A', '\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
